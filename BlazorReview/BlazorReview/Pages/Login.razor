@page "/login"
@inject HttpClient HttpClient
@inject NavigationManager Navigation
@inject Blazored.SessionStorage.ISessionStorageService SessionStorage
@using System.Net.Http
@using Blazored.SessionStorage

<h3>Login</h3>

<EditForm Model="@loginModel" OnValidSubmit="Submit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Username:</label>
        <InputText id="username" @bind-Value="loginModel.Username" class="form-control" />
    </div>

    <div class="form-group">
        <label for="password">Password:</label>
        <InputText id="password" @bind-Value="loginModel.Password" class="form-control" type="password" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger mt-3">
            @errorMessage
        </div>
    }
</EditForm>

@code {
    private LoginModel loginModel = new LoginModel();
    private string errorMessage;

    private async Task Submit()
    {
        var response = await HttpClient.PostAsJsonAsync("api/User/VerifyPassword", loginModel);

        if (response.IsSuccessStatusCode)
        {
            var user = await response.Content.ReadFromJsonAsync<UserModel>();
            await SessionStorage.SetItemAsStringAsync("UserId", user.Id.ToString());
            await SessionStorage.SetItemAsStringAsync("UserName", user.UName.ToString());
            await SessionStorage.SetItemAsStringAsync("PermissionLevel", user.PermissionLevel.ToString());

            // Redirect to home or another page
            Navigation.NavigateTo("/");
        }
        else if (response.StatusCode == System.Net.HttpStatusCode.BadRequest)
        {
            // Invalid username or password
            errorMessage = "Invalid username or password.";
        }
        else
        {
            // Handle other errors
            errorMessage = "An error occurred while processing your request.";
        }
    }

}
